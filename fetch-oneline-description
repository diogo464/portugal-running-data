#!/usr/bin/env python3
import os
import sys
import json
import subprocess

MODEL = "openrouter/anthropic/claude-3.5-haiku"


class LLMClient:
    """Client for LLM description generation."""

    def __init__(self, model: str):
        self.model = model

    def llm_call(
        self,
        system_prompt: str,
        user_prompt: str,
    ) -> str:
        proc = subprocess.run(
            ["llm", "-m", self.model, "-s", system_prompt, user_prompt],
            timeout=30,
            check=True,
            capture_output=True,
            text=True,
        )
        stdout = proc.stdout.strip()
        return stdout

    def generate_description(self, text: str) -> str:
        """Generate short description using LLM."""
        system_prompt = """És um assistente especializado em condensar descrições de eventos de corrida em resumos de uma linha em português de Portugal. Deves extrair e resumir apenas a informação mais importante e relevante da descrição fornecida.

Exemplos de resumos que deves gerar:
+ Corrida histórica pelas ruas de Lisboa com vista para o Tejo
+ Trail desafiante pela Serra da Estrela
+ São Silvestre tradicional no centro histórico do Porto
+ Meia maratona costeira com paisagens do Atlântico
+ Corrida solidária organizada pela câmara municipal
+ Prova de montanha com subidas técnicas
+ Corrida de Natal pela zona ribeirinha
+ Trail nocturno por caminhos antigos

IMPORTANTE:
- Responde APENAS com a descrição de uma linha em português de Portugal
- Usa apenas informação presente na descrição original
- Destaca características especiais do percurso, localização ou organização
- Não menciones distâncias se já estão implícitas no tipo de evento
- Foca-te no que torna este evento único ou interessante"""

        return self.llm_call(
            system_prompt,
            text,
        )


client = LLMClient(MODEL)
for slug in sys.argv[1:]:
    data_path = os.path.join("events", slug, "data.json")
    if not os.path.exists(data_path):
        continue
    data = json.load(open(data_path, "r"))
    description = data["content"]["rendered"].strip()
    if description == "":
        continue
    oneline_path = os.path.join("events", slug, "oneline-description")
    if os.path.exists(oneline_path):
        continue
    oneline = client.generate_description(description)
    with open(oneline_path, "w") as f:
        f.write(oneline)

